color_match <- str_c(colors, collapse = "|")
color_match
has_color <- str_subset(sentences, color_match)
matches <- str_extract(has_color, color_match)
has_color
a <- c("anh la ai", "toi la ai", "em la ai")
xungho <- c("anh", "em")
str_subset(a, xungho)
str_subset(a, "anh")
b <- c("anh1","1anh","anh")
str_view(b,"^anh$")
x <- "Line 1\nLine 2\nLine 3"
print(xx)
print(x)
x <- "Line 1\\nLine 2\\nLine 3"
print(x)
x <- "Line 1 \\n Line 2\\nLine 3"
x <- "Line 1 \n Line 2\\nLine 3"
print(x)
x <- "Line 1 \n Line 2\\nLine 3"
print(x)
paste(x)
x <- "Line 1 "\"n Line 2\\nLine 3"
paste(x)
getwd()
list.files()
dir()
dir("Rmd$")
dir("ni$")
dir(pattern"ni$")
dir(pattern="ni$")
a <- 2
a <- 1
a%>%
a+1
a%>%
a+1
a%>%
print()
a%T>%
print()
a%T>%
print()
a%T>%
print()%>%
paste()
b <- function(x){x+1}
a%T>%
print()%>%
b()
c <- function(x){x-1}
d <- function(x){x-1}
a%T>%
b()%>%
d()
a%T>%
b()%>%
d()
ls()
library(tidyverse)
mtcars
typeof(mtcars)
class(mtcars)
a <- list(a = 1:3, b = "a string", c = pi, d = list(-1, -5))
a
a[2]
a[4]
a[[4]]
1:0
length(x) <- 0
models
library(tidyverse)
models
mtcars
mtcars%>%
print(head($cyl))
mtcars%>%
print(head(mtcars$cyl))
mtcars%>%
print(head(.$cyl))
mtcars%>%
print(head(.[,cyl]))
mtcars%>%
print(head(.[cyl]))
models <- mtcars %>%
split(.$cyl)
models
models <- mtcars %>%
split(.$cyl) %>%
map(~lm(mpg ~ wt, data = .))
mtcars%>%
head(.)
mtcars%>%
head(.cyl)
mtcars%>%
head(.$cyl)
summary(mtcars)%>%
head(.$cyl)
summary(mtcars)%>%
head(.cyl)
mtcars %>%
split(.$cyl)
vec1 <- c(1,2,0)
vec1%>%
print(2/)
vec1%>%
print(2/.)
vec1%>%
print(3/.)
vec1%>%
print(3//.)
vec1%>%
print(3%/%.)
3/0
3//0
3%/%0
vec1%>%
print(.)
vec1%>%
print(.$1)
vec1%>%
map_dbl(possibly(log,"abc"))
vec1 <- c(1,2,"0")
vec1%>%
map_dbl(possibly(log,"abc"))
vec1 <- list(1,2,"0")
vec1%>%
map_dbl(possibly(log,"abc"))
vec1%>%
map_dbl(possibly(log,"abc"))
vec1 <- list(1,2,"0")
vec1%>%
map_dbl(possibly(log,213))
library(tidyverse)
x <- sample(10)
x %>%
head()
x %>%
detect(.>5)
x %>%
detect(~.>5)
x %>%
detect(%>%
every(is_vector))
x %>%
every(is_vector))
x %>%
every(is_vector)
x %>%
every(~is_vector)
x %>%
every(~is_vector)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
sessionInfo()
---
title: "learn_Rmakrdown"
output: html_document
---
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# test1-dplyr -------------------------------------------------------------
test1 <- presidential %>%
mutate(
year_start = year(start),
year_end = year(end),
interval = year_end - year_start
) %>%
select(-start,-end)
source('~/.active-rstudio-document', echo=TRUE)
# library -----------------------------------------------------------------
lib_list("tidyverse","lubridate")
# library -----------------------------------------------------------------
lib_list <- c("tidyverse","lubridate")
library(liblist)
library(lib_list)
# library -----------------------------------------------------------------
lib_list <- list("tidyverse","lubridate")
library(lib_list)
library(lib_list[,])
library(lib_list[i])
# library -----------------------------------------------------------------
install.packages(pacman)
# library -----------------------------------------------------------------
install.packages("pacman")
library(pacman)
lib_list <- list("tidyverse","lubridate")
p.load(lib_list)
p_load(lib_list)
ls(packages)
vignette(pacman)
vignette(package="pacman")
RSiteSearch(pacman)
RSiteSearch("pacman")
p_version(pacman)
p_version_cran(pacman)
RSiteSearch("pacman")
?rseek
??rseek
search()
p_load(lib_list)
lib_list <- c("tidyverse","lubridate")
p_load(lib_list)
memory.limit()
# library -----------------------------------------------------------------
install.packages("pacman")
library(pacman)
lib_list <- list("tidyverse","lubridate")
lib_list <- list("tidyverse","lubridate")
lib_list <- list("tidyverse","lubridate")
test1
test1
test1
vignette(package="pacman")
vignette(package="pacman")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("pacman")
# library -----------------------------------------------------------------
install.packages("pacman")
library(pacman)
lib_list <- list("tidyverse","lubridate")
p_load(lib_list)
ls(packages)
RSiteSearch("pacman")
p_version_cran(pacman)
install.packages("pacman")
test1
vignette(package="pacman")
memory.limit()
111
vignette(package = "pacman")
memory.limit()
Anh la ai cho toi hoi
vignette(package = "pacman")
memory.limit()
Anh la ai cho toi hoi
vignette(package = "pacman")
memory.limit()
Anh la ai cho toi hoi
vignette(package = "pacman")
memory.limit()
Anh la ai cho toi hoi
a <- 1
# library -----------------------------------------------------------------
install.packages("pacman")
library()
lib_list <- list("tidyverse", "lubridate")
p_load(lib_list)
ls(packages)
RSiteSearch("pacman")
p_version_cran(pacman)
search()
installed.packages()
ls(packages)
ls("packages")
# install packages --------------------------------------------------------
install_github()
# install packages --------------------------------------------------------
install_github(dplyr)
# install packages --------------------------------------------------------
library(devtools)
# install packages --------------------------------------------------------
install.packages("devtools")
library(devtools)
install_github(dplyr)
ls("packages")
search("packages")
search()
search("devtools")
searchpaths()
installed.packages()
installed.packages("tidyverse")
installed_version("tidyverse")
installed.version("tidyverse")
library(c(devtools,versions))
library(list(devtools,versions))
install.packages(versions)
install.packages("versions")
library("versions")
installed.version("tidyverse")
installed.version("devtools")
library("versions")
installed.version("devtools")
installed.versions("devtools")
installed.versions("tidyverse")
search()
installed.versions("tidyverse", version=1.0.0)
installed.versions("tidyverse", versions ="1.0.0")
installed.versions("tidyverse", versions ="1.2.0")
vignette("pacman")
search()
require("pacman")
rm(list=ls())
packages = c("tidyverse", "geomorph",
"phytools", "viridis")
lapply(packages, function(x){install.packages(x)
library(x)})
search()
lapply(packages, function(x){install.packages(x)
library(x,character.only = TRUE)})
install.packages()
old.packages()
update.packages()
pcks <- c("tidyverse", "lubridate", "pacman")
library(pcks)
lappy(pcks, library())
lapply(pcks, library())
lapply(pcks, function() {
library()
})
apply(pcks, function() {
library()
})
library(x)
library(pcks)
library()
apply(pcks, function(x) {
library()
})
apply(pcks, function(x) {
library(x)
})
ls()
search()
view(install.packages())
View(install.packages())
R.Version()
View(install.packages())
install.packages()
install.packages("tidyverse")
install.packages()
R.home("library")
.Library
.libPaths()
View(available.packages())
R.home()
R.home(library)
R.home("library")
.Library
R.home("library")
path.expand("~")
Sys.getenv("HOME")
.libPaths()
setRepositories()
View(available.packages())
file.choose()
install.packages(
c("xts","zoo"),
lib="C:\\Users\\duyti\\Desktop\\r_1",
repos="http://www.stats.bris.ac.uk/R/"
)
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
install.packages("jsonlite", type = "source")
find.package("devtools")
library(devtools)
find_rtools()
Sys.info
Sys.info()
Sys.info()
Sys.info()
install.packages("installr")
library(installr)
updateR()
search()
Sys.getenv()
Sys.getenv("HOME")
R.home()
getwd()
library(purrr)
a <- c(1,2,3,4)
mean(a)
map(a,mean)
map(a,mean())
map(a,~mean())
map(a,~mean)
map(a,~mean(x))
map(a, mean)
map(a, .mean)
func1<- function(x) x+1
map(a, func1)
func1<- function(x) mean(x)
map(a, func1)
func1<- function(x) func(x)
func1<- function(x) x+1
map(a, func1)
modify(a, func1)
map_int(a, func1)
map_int(a, ~func1)
map(a, ~func1)
map(a, ~func1(.x))
mean(a trim=0.1)
mean(a, trim=0.1)
mean(a)
mean(a, trim=0.5)
mean(a)
a <- c(1.1,2,3,4)
mean(a, trim=0.5)
mean(a, trim=0.1)
df <- data.frame(
x = 1:3,
y = 6:4
)
map(df, ~.x*2)
modify(df, ~.x*2)
df
xs <- map(1:8, ~ runif(10))
xs[[1]][[1]] <- NA
ws <- map(1:8, ~ rpois(10, 5) + 1)
xs
ws
xs
ws
map2_dbl(xs,ws,weighted.mean)
_
map2_dbl(xs,ws,weighted.mean)
map2_dbl(xs,ws,weighted.mean, na.rm=TRUE)
iris
head(iris)
imap(iris,~paste("a"))
imap(iris,~paste("a",.x))
imap(iris,~paste("a",.x[1,]))
imap(iris,~paste("a",.x[1]))
imap(iris,~paste("a",.x[1], .y))
head(iris)
iris[1]
iris[,1]
map2_dbl(xs,ws,weighted.mean, na.rm=TRUE)
pmap_dbl(list(xs,ws), weighted.mean)
pmap_dbl(list(xs,ws), func1)
typeof(ws)
typeof(iris)
head(iris)
head(iris)
iris[1]
iris[1,1]
iris[,1]
iris[1,1]
iris[1]
iris[1,]
iris[[1]]
strrep("a",2)
paste0("a",2)
library("")
library("here")
here()
ls()
here("Downloads")
here("Documents")
here()
here("Docum2s")
getwd()
here("Docum2s", "ale")
file.choose()
set_here(""C:\\Users\\duyti\\Desktop\\abc")
file.choose()
set_here("C:\\Users\\duyti\\Desktop\\abc")
dr_here()
here()
set_here("C:\\Users\\duyti\\Desktop\\abc")
setwd(here())
getwd()
here()
library(here)
here()
here()
here("duyti")
here("C:/Users/duyti")
here(C:/Users/duyti)
here("a;e")
set_here(C:/Users/duyti)
set_here("C:/Users/duyti")
here()
ls()
set_here("C:/Users/duyti/Documents")
here()
here("R")
ls(here())
read.csv("1.csv")
library(ProjectTemplate)
library(here)
here()
file.choose()
set_here("C:\\Users\\duyti\\Desktop\\asdf")
create.project("test2",rstudio.project = TRUE)
library(ProjectTemplate)
library(here)
here()
set_here("C:\\Users\\duyti\\Desktop\\asdf")
create.project("test2",rstudio.project = TRUE)
file.exists("~/.ssh/id_rsa.pub")
library(ProjectTemplate)
create.project("test1", rstudio.project = TRUE)
library(ProjectTemplate)
create.project("rtest", rstudio.project = TRUE)
library(ProjectTemplate)
create.project("rtest", rstudio.project = TRUE)
library(ProjectTemplate)
create.project("rtest", rstudio.project = TRUE)
library(ProjectTemplate)
create.project("rtest", rstudio.project = TRUE)
library(ProjectTemplate)
create.project("rtest", rstudio.project = TRUE)
library(ProjectTemplate)
create.project("rtest", rstudio.project = TRUE)
library(ProjectTemplate)
create.project("rtest", rstudio.project = TRUE)
library(ProjectTemplate)
create.project("rtest", rstudio.project = TRUE)
setwd("~/rtest")
